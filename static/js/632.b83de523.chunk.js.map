{"version":3,"file":"static/js/632.b83de523.chunk.js","mappings":"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","sources":["components/AddInfo/AddInfo.styled.js","components/AddInfo/AddInfo.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","pages/MovieDetailsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Extras = styled.div`\n  background-color: ${p => p.theme.colors.white};\n  padding: 30px;\n\n  ul {\n    display: flex;\n    gap: 20px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { Extras } from './AddInfo.styled';\n\nexport const AddInfo = ({ data }) => {\n  return (\n    <Extras>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to={`/movies/${data.id}/cast`}>Cast</Link>\n        </li>\n        <li>\n          <Link to={`/movies/${data.id}/reviews`}>Reviews</Link>\n        </li>\n      </ul>\n    </Extras>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ArrowLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  width: min-content;\n`;\n","import { BsArrowLeft } from 'react-icons/bs';\nimport { ArrowLink } from './BackLink.styled';\n\nexport const BackLink = ({ to = '/', children }) => {\n  return (\n    <ArrowLink to={to}>\n      <BsArrowLeft />\n      {children}\n    </ArrowLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  background-color: ${p => p.theme.colors.white};\n  margin-top: 30px;\n  padding-bottom: 30px;\n  display: flex;\n  gap: 40px;\n\n  .box-title {\n    margin-bottom: 2px;\n  }\n\n  .text-box {\n    padding: 30px 0;\n  }\n`;\n","import { Card } from './MovieCard.styled';\nimport { nanoid } from 'nanoid';\n\nexport const MovieCard = ({ data }) => {\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const year = data.release_date.split('-');\n\n  return (\n    <Card>\n      <img\n        src={\n          data.poster_path\n            ? `https://image.tmdb.org/t/p/w500/${data.poster_path}`\n            : defaultImg\n        }\n        alt={data.title}\n        width={350}\n      />\n      <div className=\"text-box\">\n        <h1>\n          {data.title} ({year[0]})\n        </h1>\n        <p>\n          <i>{data.tagline}</i>\n        </p>\n        <p>{data.overview}</p>\n        <div>\n          <p className=\"box-title\">\n            <strong>Genres:</strong>\n          </p>\n          <ul>\n            {data.genres.map(item => (\n              <li key={nanoid()}>\n                <p>{item.name}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div>\n          <p className=\"box-title\">\n            <strong>Languages:</strong>\n          </p>\n          <ul>\n            {data.spoken_languages.map(item => (\n              <li key={nanoid()}>\n                <p>{item.english_name}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div>\n          <p className=\"box-title\">\n            <strong>Production countries:</strong>\n          </p>\n          <ul>\n            {data.production_countries.map(item => (\n              <li key={nanoid()}>\n                <p>{item.name}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Card>\n  );\n};\n","import { fetchMovieById } from 'api';\nimport { useEffect, useState, useRef } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\n//import { Link } from 'react-router-dom';\nimport { AddInfo } from 'components/AddInfo/AddInfo';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\n\nexport default function MovieDetailsPage() {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const params = useParams();\n  const [movie, setMovie] = useState();\n\n  useEffect(() => {\n    if (!params.movieId) return;\n    async function getMovie() {\n      try {\n        const fetchedMovie = await fetchMovieById(params.movieId);\n        setMovie(fetchedMovie);\n      } catch (error) {}\n    }\n\n    getMovie();\n  }, [params.movieId]);\n\n  return (\n    <>\n      <BackLink to={backLinkLocationRef.current}>Back</BackLink>\n      {movie && (\n        <>\n          <MovieCard data={movie} />\n          <AddInfo data={movie} />\n        </>\n      )}\n\n      <Outlet />\n    </>\n  );\n}\n"],"names":["Extras","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","white","AddInfo","_ref","data","_jsxs","children","_jsx","Link","to","concat","id","ArrowLink","BackLink","_ref$to","BsArrowLeft","Card","MovieCard","year","release_date","split","src","poster_path","alt","title","width","className","tagline","overview","genres","map","item","name","nanoid","spoken_languages","english_name","production_countries","MovieDetailsPage","_location$state$from","_location$state","location","useLocation","backLinkLocationRef","useRef","state","from","params","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","_getMovie","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovie","_context","prev","next","fetchMovieById","movieId","sent","t0","stop","apply","arguments","getMovie","_Fragment","current","Outlet"],"sourceRoot":""}