{"version":3,"file":"static/js/180.242d55d3.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/Searchbar/SearchForm.styled.js","components/Searchbar/Searchbar.js","pages/MoviesPage.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const year = movie.release_date.split('-');\n\n  return (\n    <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n      <img\n        width={320}\n        src={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n            : defaultImg\n        }\n        alt={movie.title}\n      />\n      <div className=\"text-box\">\n        <h3>\n          {movie.title} ({year[0]})\n        </h3>\n      </div>\n    </Link>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  background-color: ${p => p.theme.colors.white};\n  max-width: 320px;\n\n  .text-box {\n    padding: 30px 20px;\n\n    h3 {\n      color: ${p => p.theme.colors.black};\n      margin-bottom: 0;\n    }\n  }\n`;\n","import { MovieItem } from 'components/MovieItem/MovieItem';\nimport { List, Item } from './MovieList.styled';\n\nexport const MovieList = ({ items }) => {\n  return (\n    <List>\n      {items.map(item => (\n        <Item key={item.id}>\n          <MovieItem movie={item} />\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { ErrorMessage } from 'formik';\n\nexport const SearchForm = styled.div`\n  padding-bottom: 30px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  border-radius: 3px;\n  overflow: hidden;\n\n  .search-item {\n    text-align: center;\n    width: 100%;\n    display: flex;\n    gap: 10px;\n  }\n\n  input {\n    width: 100%;\n    max-width: 400px;\n\n    &:focus {\n      border: 1px solid ${p => p.theme.colors.primaryColor};\n      outline: none;\n    }\n  }\n\n  button {\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid ${p => p.theme.colors.primaryColor};\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.black};\n    padding: 5px 10px;\n    border-radius: 5px;\n    transition: color ${p => p.theme.cubicTransition},\n      background-color ${p => p.theme.cubicTransition};\n\n    &:hover {\n      color: ${p => p.theme.colors.white};\n      background-color: ${p => p.theme.colors.primaryColor};\n    }\n  }\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  position: absolute;\n  bottom: -1.5em;\n  color: red;\n  font-size: 14px;\n`;\n","import { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { SearchForm, ErrMessage } from './SearchForm.styled';\n\nconst SignupSchema = Yup.object().shape({\n  search: Yup.string().required('This field is empty. Write something'),\n});\n\nexport const Searchbar = ({ onSubmit, handleChange }) => {\n  return (\n    <SearchForm>\n      <Formik\n        initialValues={{\n          search: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={values => {\n          onSubmit(values);\n        }}\n        onChange={values => {\n          handleChange(values);\n        }}\n      >\n        <Form>\n          <div className=\"search-item\">\n            <label htmlFor=\"search\" className=\"visually-hidden\"></label>\n            <Field\n              id=\"search\"\n              name=\"search\"\n              autoComplete=\"off\"\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Search movie\"\n              //value={title}\n              //onChange={handleChange}\n            />\n            <ErrMessage name=\"search\" component=\"div\" />\n            <button type=\"submit\" className=\"button\">\n              Search\n            </button>\n          </div>\n        </Form>\n      </Formik>\n    </SearchForm>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Bars } from 'react-loader-spinner';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { searchMovies } from 'api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const title = searchParams.get('title');\n\n  useEffect(() => {\n    if (!title || title === '') {\n      return;\n    }\n    async function getMovies() {\n      try {\n        setLoading(true);\n        setError(false);\n        const allMovies = await searchMovies(title);\n        setMovies(allMovies.results);\n        if (allMovies.results < 1) {\n          toast.error('There are no entries. Try again');\n        }\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getMovies();\n  }, [title]);\n\n  const handlerSubmit = evt => {\n    if (title !== evt.search.trim()) {\n      setMovies([]);\n    }\n    setQuery(evt.search.trim());\n    setSearchParams({ title: evt.search.trim() });\n  };\n\n  const handlerChange = evt => {\n    setSearchParams({ title: evt.target.value.trim() });\n  };\n\n  return (\n    <>\n      <h1>All movies</h1>\n      <Searchbar onSubmit={handlerSubmit} handleChange={handlerChange} />\n      {loading && (\n        <Bars\n          height=\"80\"\n          width=\"80\"\n          color=\"#4fa94d\"\n          ariaLabel=\"bars-loading\"\n          visible={true}\n        />\n      )}\n      {error && <p>Error! Please reload this page!</p>}\n      {movies.length > 0 && <MovieList items={movies} />}\n      <Toaster position=\"top-right\" />\n    </>\n  );\n}\n"],"names":["MovieItem","_ref","movie","location","useLocation","year","release_date","split","_jsxs","Link","to","concat","id","state","from","children","_jsx","width","src","poster_path","alt","title","className","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","p","theme","colors","white","black","MovieList","items","map","item","SearchForm","primaryColor","cubicTransition","ErrMessage","ErrorMessage","SignupSchema","Yup","shape","search","required","Searchbar","onSubmit","handleChange","Formik","initialValues","validationSchema","values","onChange","Form","htmlFor","Field","name","autoComplete","type","placeholder","component","MoviesPage","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","setQuery","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","allMovies","_context","prev","next","searchMovies","sent","results","toast","t0","finish","stop","apply","arguments","getMovies","_Fragment","evt","trim","target","value","Bars","height","color","ariaLabel","visible","length","Toaster","position"],"sourceRoot":""}